#include <stdio.h>

int largestN(int x, int largest){
	if(x > largest)
		return x;
	return largest;
}

int main(){

	FILE *fp;

	fp = fopen("20x20Grid.txt","r");

	int grid[20][20], i, j;		//i: is rows, j: is coloums
	int largest = 0;

	for(i = 0; i < 20; i++){
		for(j = 0; j < 20; j++){
			fscanf(fp,"%d",&grid[i][j]);
			printf("%d ",grid[i][j]);
		}
		printf("\n");
	}

	//Up
	for(i = 0; i < 20-4; i++){
		for(j = 0; j < 20; j++){
			largest = largestN(grid[i][j]*grid[i+1][j]*grid[i+2][j]*grid[i+3][j],largest);
		}
	}

	//left
	for(i = 0; i < 20; i++){
		for(j = 0; j < 20-4; j++){
			largest = largestN(grid[i][j]*grid[i][j+1]*grid[i][j+2]*grid[i][j+3],largest);
		}
	}

	//diagonal l to r
	for(i = 0; i < 20; i++){
		for(j = 0; j < 20; j++){
			if( i+3 < 20 && j+3 < 20)
				largest = largestN(grid[i][j]*grid[i+1][j+1]*grid[i+2][j+2]*grid[i+3][j+3],largest);
		}
	}

	//diagonal r to l
	for(i = 0; i < 20; i++){
		for(j = 0; j < 20; j++){
			if( i-3 > 0 && j-3 > 0)
				largest = largestN(grid[i][j]*grid[i+1][j-1]*grid[i+2][j-2]*grid[i+3][j-3],largest);
		}
	}
	printf("largest: %d\n",largest);

	return 0;
}
